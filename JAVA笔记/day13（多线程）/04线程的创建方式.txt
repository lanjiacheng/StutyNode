一、创建线程方式一：
步骤：
1.定义一个类继承Thread类
2.覆盖Thread类中的run方法（线程的任务代码就定义在run方法中）
3.直接创建Thread的子类对象创建多线程
4.调用start方法（该方法继承自Thread类）开启线程并调用线程的任务run方法执行 

二、创建线程方式二：
步骤：
1.定义类实现Runnable接口
2.覆盖接口中的run方法，将线程的任务封装到run方法中
3.通过Thread类创建线程对象，并将Runnable接口的子类对象作为Thread类的构造函数的参数进行传递
	为什么？
	因为线程的任务都封装在Runnable接口子类对象的run方法中
	所以要在线程创建时就必须明确要运行的任务
4.调用线程对象的start放法开启线程

实现Runnable接口的好处：
1.将线程的任务从线程的子类分离出来，进行了单独封装
	按照面向对象的思想将线程任务封装成对象。
2.避免了java单继承的局限性

所以，第二种创建线程方法较为常用