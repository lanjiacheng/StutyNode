一、多肽概述：
一个例子：
class 动物
{}

class 猫 extends 动物
{}

猫 x=new 猫();

动物 x=new 猫();

猫这类事物即具备猫的形态，又具备着动物的形态
这就是对象的多态性

简单说：就是一个对象对应着不同的类型

多态在代码中的体现：
	父类或接口的类型的引用指向其子类的对象

二、多态的好处；
	提高代码的扩展性，前期定义的代码可以使用后期的内容

三、多肽的弊端：
	前期定义的内容不能使用后期子类的特有内容，比如：
		不能通过动物类型的的引用去调用猫类型对象中的猫特有方法（指不是从父类实现下来的方法）

四、多态的前提：
	1.必须有关系，继承、实现
	2.要有覆盖