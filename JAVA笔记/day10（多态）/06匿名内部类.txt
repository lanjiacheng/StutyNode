一、概述：
匿名内部类，就是内部类的简写格式
	必须有前提：
	内部类必须继承或者实现一个外部类或接口
匿名内部类：其实就是一个匿名子类对象

格式：
new 父类or接口(){子类内容}
一个实例：
abstract class Demo
{
	abstract void show();
}
class Outer
{
	int num=4;
	public void method()
	{
		Demo d=new Demo()	//此处，Demo为该匿名内部类继承的父类，通过new直接建立了
					//内部类的对象
		{
			void show()	//此处为匿名内部类内容，须覆盖父类的抽象方法
			{
				System.out.println("show..."+num);
			}
			void haha()	//此处为匿名内部类的内容，可以在父类基础上扩展
			{}
		}	//此处，可以直接把前部分当做一个对象的引用，可以直接调用
			//方法
		d.show();	
		d.show();
	}
}

二、匿名内部类使用场景：
通常使用场景之一：
当函数参数是接口类型时，而且接口中的方法不超过三个
可以用匿名内部类作为实际参数进行传递

三、一些说明：
1.在一个外部类中定义了一个内部类，外部类方法如果是静态的，那么将不能访问非静态的内部类，
	如果外部类方法是非静态的，那么可以访问。
原因如下：
	静态方法并不持有this（代表所属对象的引用），而非静态成员方法必须持有this才能引用