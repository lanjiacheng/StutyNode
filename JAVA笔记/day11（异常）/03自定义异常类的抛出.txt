一、可以手动自定义抛出异常对象，例如
throw new ArrayIndexOutOfBoundsException(字符串或整型数值（越界的下标）)
注意：如果建立异常对象时传递的参数是字符串，那么虚拟机处理时会直接打印出字符串
	如果建立对象时传递的是整型参数，那么虚拟机处理时会前面加上一提示，再加上整型参数（下标）

二、可以自定义异常，例如：
对于角标是整数不存在，可以用角标越界表示
对于负数为角标的情况，准备用负数角标异常来表示

负数角标这种异常在java中并没有定义过
那就按照java异常的创建思想，面向对象，将负数角标进行描述，并封装成对象

这种自定义的问题描述称为自定义异常

注意：如果让一个类成为异常类，必须要继承异常体系，因为只有成为异常体系的子类，才具由可抛性

三、一个例子：
class FuShuIndexException extends Exception//通过继承体系来定义异常
{
	FuShuIndexException(String s)
	{
		super(s);		//此处通过父类构造函数来传递并初始化异常对象
	}
	FuShuIndexException(int index)
	{
		super("Array index out of range:"+index);
	}
	FuShuException()
	{
		super();
	}
}
class Demo
{
	public static void main(String[] args)throws  FuShuIndexException//不进行处理就必									//须做抛出提示
	{
		method();
	}
	void method()throws FuShuIndexException	//不处理，就提示
	{
		if()
			throw new FuShuIndexException("Error");
	}
}
说明：

对于抛出的是Exception异常类的对象时：

创建并抛出对象时传递的是字符串"Error"（默认Exception类的构造函数只能接收字符串或者不接收）
，虚拟机打印如下:

Exception in thread "main" Exception: Array index out of range:-5
	at Demo.method(Demo.java:10)
	at Demo.main(Demo.java:5)

不传递字符串参数时虚拟机打印如下：

Exception in thread "main" Exception
	at Demo.method(Demo.java:10)
	at Demo.main(Demo.java:5)

