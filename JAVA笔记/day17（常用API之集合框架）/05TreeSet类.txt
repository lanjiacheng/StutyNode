一、特点：
TreeSet：可以对Set集合中的元素进行排序，不同步

二、排序的一点说明：
	该集合判断唯一性的方式就是：根据比较方法的返回结果是0，是0，视为相同元素，不存
	那么集合如何实现元素的排序呢，就是通过调用元素自身的compareTo方法，通过该方法的返回值来进行排序
	返回值大于0则大于，小于零则小于，等于0则视为相同
	那么compareTo方法哪来的呢？就是通过实现Comparable接口，并覆盖compareTo方法来实现的

三、Comparator比较器:
	当不想按照对象自身具备的自然比较顺序进行排序，或者说对象不具备自然顺序，怎么办？
	可以使用TreeSet集合第二种排序方式：
	让集合自身具备比较功能，定义一个类实现Comparator接口，并覆盖compare方法
	然后将该类对象作为参数传递给TreeSet集合的构造函数，那么如此创建的集合就具备了自己的比较器
	当添加对象时，就会自定使用自身的比较器的比较方法来比较并判断元素的位置，而原宿自身的比较方法
	不再其作用

四、关于TreeSet类的存储方式说明：
	在TreeSet集合的存储方式是通过二叉树来存储的，在这种二叉树中，左边结点小于中间结点，中间结点小于
	右边结点，迭代的时候是按照中序遍历方式来取出的。
	如果compareTo或compare方法返回的都是1，那么迭代取出的顺序将会是存入的顺序，如果返回值都是0，那么
	迭代迭代取出的顺序就会是存入的顺序的逆序