 package cn.itcast.gui.p1.awt;

import java.awt.Button;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class MouseAndKeyDemo {

	
	private Frame f;
	private TextField tf;
	private Button but;
	
	public MouseAndKeyDemo() {
		init();
		
	}


	private void init() {
		
		f = new Frame("演示鼠标和键盘监听");		//创建一个窗口
		f.setBounds(400,200,500,400);			//设置窗口位置大小
		f.setLayout(new FlowLayout());			//添加布局管理器
		tf = new TextField(35);				//创建文本框并设置长度为35
		but = new Button("一个按钮");			//创建一个按钮
				
		f.add(tf);					//往窗口添加文本框
		f.add(but);					//往窗口添加按钮
		
		
		myEvent();					//封装了添加监听事件的代码
		
		
		f.setVisible(true);				//设置可见性
		
	}


	private void myEvent() {
		
		//给文本框添加键盘监听。
		tf.addKeyListener(new KeyAdapter() {	//通过继承键盘监听适配器来创建匿名内部类

			@Override
			public void keyPressed(KeyEvent e) {	//按下键盘触发此方法
				
//				System.out.println("key run..."+KeyEvent.getKeyText(e.getKeyCode())+"::::"+e.getKeyCode());		
					//KeyEvent方法：getKayText(int i):获取该数字对应的键名（字符串）
					//		getKeyCode():获取按下的键盘的代码
//				int code = e.getKeyCode();
//				if(!(code>=KeyEvent.VK_0 && code<=KeyEvent.VK_9)){	//KeyEvent.VK_9：该类中的常量
											//值为int，各个键对应的码
//					System.out.println("必须是数字");
//					e.consume();					//执行此方法，不按默认方式处理事件
//				}
				
				if(e.isControlDown() && e.getKeyCode()==KeyEvent.VK_ENTER){	//同时按ctrl+enter
					System.out.println("enter run ...");
				}
			}
			
		});
		
		
		
		f.addWindowListener(new WindowAdapter() {

			@Override
			public void windowClosing(WindowEvent e) {
				
				System.exit(0);
			}
			
		});
		
		but.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
//				System.out.println("action run.....");
			}
		});
		
		
		//在按钮上添加一个鼠标监听.
		but.addMouseListener(new MouseAdapter() {	//通过继承鼠标事件监听适配器来创建鼠标监听器

			private int count = 1;
			@Override
			public void mouseEntered(MouseEvent e) {	//鼠标进入按钮，触发次方法
				
//				System.out.println("mouse enter..."+count++);
				
//				tf.setText("mouse enter..."+count++);	//设置文本框内容
				
			}
			@Override
			public void mouseClicked(MouseEvent e) {	//点击鼠标触发此方法
				
				if(e.getClickCount()==2)		//可以通过传递进来的事件对象e获取点击次数
				tf.setText("mouse double click..."+count++);
//				System.out.println("mouse click..."+count++);
//				System.out.println(e);
			}
			
			
			
		});
	}


	/**
	 * @param args
	 */
	public static void main(String[] args) {

		new MouseAndKeyDemo();
	}

}
