一、子父类成员变量重名情况：
1.子类继承父类，如果子类中也有一个与父类同名的成员变量，继承过程中，
并没有把父类的同名变量给覆盖掉，而是继承了父类的同名变量，只是在子类引用
该同名变量时，默认引用的是子类中的同名变量

2.super关键字：
当子父类中的成员变量同名时用super区分
super代表的是父类的空间，不代表对象引用，因为不建立父类对象也可以调用super
当创建子类对象时，先将子类所继承的父类对象加载进方法区，然后将子类加载进方法区，并将
super（父类空间）赋给子类，然后再创建包含子父类内容的对象，子类成员和父类成员都包括在
对象中，只是他们在一个对象中的两个内存空间

super和this的用法很相似，但是本质有所不同
this代表本类对象的引用
super代表一个父类空间

3.子类继承父类，一般情况下都是全部继承
如果同名，可用super关键字来引用父类的成员
如果父类中有（private修饰）的成员变量，子类同样会继承，只是不能直接引用，
若要引用可以在父类中定义一个返回此变量的公共方法，通过该方法可以访问父类的私有变量

二、继承当中的成员函数：
1.当子父类当中出现一模一样（函数名参数列表都一样）的情况，会运行子类的函数
这种现象称为覆盖操作，这是函数在子父类当中的特性
函数两点特性：
（1）重载：同一个类中
（2）覆盖：子父类中，覆盖也称为重写、覆写
函数覆盖的注意事项：
（1）子类方法覆盖父类方法时，子类方法权限必须大于等于父类权限
（2）静态方法只能覆盖静态方法，或被静态方法覆盖
（3）当子类覆盖了父类的同名方法后，子类需要用到父类的同名方法，可以通过super.方法名（）来调用
（4）当父类中有有一个与子类同名的方法，并且父类中的方法被private 修饰，那么子类中的同名方法可以存在，
	但是并不能说他们是覆盖关系，priavte修饰的方法不能被覆盖

三、一些说明：
1.同名成员变量细节：一个子类继承父类，在子类中调用到父类方法，父类方法又调用到子父类中都有的同名成员
变量，父类方法所调用的同名成员变量将会是父类中所有的
2.同名成员方法细节：一个子类继承父类，在子类中调用到父类方法，父类方法又调用到子父类中都有的同名成员方法，那么父类方法所调用的将会是子类中的同名方法

