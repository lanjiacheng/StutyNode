面向对象：
	定义对象:
		class Student():
		    name = ''			#成员数据
		    age = 0

		    def __init__(self,name,age):	#构造函数，构建对象时自动调用，也可通过对象显示调用
			self.name = name		#显示调用返回None，且只能返回None
			self.age = age

		    def print_file(self):		#即使没有需要传递的参数，也要传入一个self
		        print('name:'+self.name)
			print('age:'+str(self.age))

	创建和使用对象：
		student = Student()
		student.print_file()

导入类：
	from module1 import Student1

两个概念：
	类变量：
		与类相关联的变量，保存的是类的变量值，在类内部调用类变量，可在任意类中的方法来调用
		可直接用类变量变量名来访问，但是访问的只是类变量，不是实例变量，对对象没影响
		直接在类里面定义的变量，视为类变量。
		
	实例变量：
		与对象相关联，保存的是对象的变量值，在对象内部调用或初始化实例变量时，用self.xxx
		的方法。默认情况下，类变量是一直存在的，如果一个对象没有实例变量，那么这个对象
		调用的将会是类变量。只有在构造函数中使用self.xx给xx变量初始化，那么这个xx变量
		才会成为所构建的对象的实例变量。在外部访问一个实例变量时，如果不存在，那么会去类变量中
		寻找，再找不到，去父类中找。

内置变量：
	__dict__：
		这个变量依赖于对象存在，并保存着一个对象的所有变量及变量值
		使用方法：
			instance.__dict__
	__class__：
		这个变量依赖于对象存在，并保存着一个对象的所属类，访问这个变量，即可得到
		对象所属类

self：
	实例方法的第一个必须显示参数，代表调用这个方法的对象，不代表类

实例方法：
	带有self参数的方法就是实例方法，包括__init__(self)方法，在实例方法中引用类变量要加上类名，
	引用实例变量要加上self
	调用实例方法时，通过类名调用需要加上self，通过对象调用则不需要

类方法：
	形如：
		@classmethod
		def funcname(cls):
		    pass
	说明：
		类方法也需要定义一个代表类形参，并且在前面加上@classmethod以标明
		不能访问实例变量

静态方法：
	形如：
		@staticmethod
		def funcname(x,y):
		    pass

	说明：
		不需要定义必须参数，只需在方法前面添加@staticmethod
		不能访问实例变量

公开方法：
	默认情况下，所有方法都是公开的

私有方法：
	在方法名前面加上__，就会变成私有方法
	形如：
		def __funcname():
		    pass

	说明：
		__init__()方法仍然是公开方法，因为__xx__形式的函数名仍被当做公开方法

公开变量：
	默认都是公开变量

私有变量：
	形如：
		__xx
	说明：
		当在外部用：instance.__xx__xx 形式访问私有变量时，不会报错，因为如此访问的不是私有变量
		而是给这个对象添加了一个变量__xx，python是动态语言，可给对象动态添实例变量。

python私有变量保护机制：
	类中变量被定义为私有的（如：__xx），那么该私有变量名会变成_ClassName__xx，原来的变量名在外部将不再
	生效，但是还可以通过_ClassName__xx来访问原来的私有变量，但是不推荐访问

面向对象三大特性：
	继承性：
		语法：
			class Student(Human):
			    def __init__(self):
			        super(Student,self).__init__(self,name,age)

		python支持多继承

		子类方法与父类方法重名时，产生覆盖，即调用子类的方法时不会调用父类方法，但仍可以通过
			super(Student,self).xxx()来调用父类方法

--------------------------------------------------------------------------------------------------------
总结：
	通过对象调用实例方法（没有装饰器的方法），会传入一个代表本对象的对象
	通过对象调用类方法（有装饰器），会传入一个该对象的类的参数
	通过类调用类方法，会传入一个代表本类的参数、
	其他情况不会隐式传递任何参数

	当发生继承关系时，不能直接通过子类对象来调用父类方法，但是可以通过super()方法得到父类代理对象，
		并且这个对象调用任任何实例方法都会传入子类对象的self（在super()方法里面指定），再用代
		理对象进行调用，但是变量可以通过子类来调用父类的，因为本类对象找不到就去类中找，再找不到
		就到父类去找

	在类中的方法调用类的成员变量时，需要指定命名空间，如调用类变量用cls.xx或XX.xx，调用实例变量
		使用self.xx

	关于实例变量的定义
