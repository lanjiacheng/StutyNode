一、二维数组定义方式：
格式1：
int[][]arr=new int[3][2];
说明：
定义名称为arr的二维数组
二维数组中有3个一维数组
每个一维数组有2个元素
一维数组名称分别为：arr[0],arr[1],arr[2]
赋值方法形如：arr[0][1]=78;
一个二维数组存储的其实就是一个一维数组的引用（首地址），如arr[0]其实是一个引用（首地址）

格式2：
int[][]arr=new int[3][];
说明：
二维数组中有3个一维数组
每个一位数组都是默认初始化值null
可以对这三个一维数组分别进行初始化：
arr[0]=new int[3];
arr[1]=new int[1];
arr[2]=new int[2];
也就是说，二维数组中的一维数组可以指向不同长度的实例，本质上，在内存中二维数组里的一维数组所占的内存并不在二维数组中

一个例子：
System.out.println(arr);//直接打印二维数组，打印的是该二维数组的信息
System.out.pintln(arr[0]);//直接打印二维数组中的角标为0的一维数组，输出的是该一维数组的信息
System.out.println(arr[0][0];//直接打印二维数组中的一维数组的角标为0的元素)

格式3：
int[][] arr={{1,2,3},{4,5,6},{7,6},{1}};

二、关于二维数组的注意事项：
1.获取数组长度：
int[][] arr=new int[3][2];
arr.length=3;//获取的是二维数组的长度
arr[0].length=2;获取的是一维数组的长度

2.二维数组的遍历：
/*
多维数组的遍历问题
*/
class Exercise08
{
	public static void main(String[] args) 
	{
		int[][] arr=new int[][]{{1,2,3},{4,5,6,7},{8,9,10,11,12}};
		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr[i].length;j++)
			{
				System.out.print(arr[i][j]+",");
			}
			System.out.println();
		}
	}
}